# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
      /home/setkeh/.config/nixpkgs/etc/overlays/dwm.nix
    ];

  nix.package = pkgs.nixUnstable;
  nix.extraOptions = ''
    experimental-features = nix-command flakes
  '';

  # Allow Unfree Software
  nixpkgs.config.allowUnfree = true;

  fileSystems."/".options = [ "noatime" "nodiratime" "discard" ];

  # Use Latest Kernel not LTS
  boot.kernelPackages = pkgs.linuxPackages_latest;

  # Use the systemd-boot EFI boot loader.
  #boot.loader.systemd-boot.enable = true;

  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
  boot.loader.grub.version = 2;
  boot.loader.grub.device = "nodev";
  boot.loader.grub.efiSupport = true;
  boot.loader.grub.useOSProber = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # Grub menu is painted really slowly on HiDPI, so we lower the
  # resolution. Unfortunately, scaling to 1280x720 (keeping aspect
  # ratio) doesn't seem to work, so we just pick another low one.
  boot.loader.grub.gfxmodeEfi = "1024x768";

  boot.initrd.luks.devices.luksroot = { device = "/dev/disk/by-uuid/755dc9c0-4ed6-4448-a75d-fb5b22797539"; preLVM = true; allowDiscards = true; }; 

  services.udev.packages = [ pkgs.rtl-sdr ]; 

  # Setup for KVM
  boot.kernelModules = [ "kvm-amd" "coretemp" "nct6775" "amdgpu" ];
  boot.kernelParams = [
    "video=DP-3:1920x1080@60"
    "video=DP-4:1920x1080@60"
    "video=HDMI-A-1:1920x1080@60"
    "video=HDMI-A-2:1920x1080@60"
    "modprobe.blacklist=dvb_usb_rtl28xxu" 
  ];

  networking.hostName = "Workstation"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

  # Set your time zone.
  time.timeZone = "Australia/Sydney";

  # The global useDHCP flag is deprecated, therefore explicitly set to false here.
  # Per-interface useDHCP will be mandatory in the future, so this generated config
  # replicates the default behaviour.
  networking.interfaces.enp25s0.useDHCP = true;
  networking.interfaces.enp29s0.useDHCP = true;
  networking.vlans = {
    vlan10 = { id=10; interface="enp29s0"; };
  };
  networking.interfaces.vlan10.useDHCP = true;

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # Select internationalisation properties.
   i18n.defaultLocale = "en_US.UTF-8";
   console = {
     font = "Lat2-Terminus16";
     keyMap = "us";
   };

  # OpenCL
  hardware.opengl.extraPackages = with pkgs; [
    rocm-opencl-icd
    rocm-opencl-runtime
    amdvlk
  ];

  # Vulkan
  hardware.opengl.driSupport = true;
  # For 32 bit applications
  hardware.opengl.driSupport32Bit = true;

  # Configure X11 Windowing system
  services.xserver = {
    enable = true;
    videoDrivers = [ "amdgpu" ];
  
    displayManager = {
      sddm.enable = true;
      #defaultSession = "none+awesome";
      sessionCommands = ''
	xrandr --output DisplayPort-0 --off --output DisplayPort-1 --off --output HDMI-A-0 --off --output HDMI-A-1 --off --output DVI-D-0 --off --output DisplayPort-2 --mode 1920x1080 --pos 640x0 --rotate normal --output DisplayPort-3 --mode 1920x1080 --pos 2560x0 --rotate normal --output DisplayPort-4 --mode 2560x1440 --pos 0x1080 --rotate normal --output DisplayPort-5 --off --output DisplayPort-6 --mode 1920x1080 --pos 2560x1080 --rotate normal --output DisplayPort-7 --mode 2560x1440 --pos 4480x0 --rotate normal
	feh --randomize --bg-fill ~/.wallpaper/*
	compton &
	slstatus &
      '';
    };

     windowManager.dwm = {
       enable = true;
    };

#    windowManager.awesome = {
#      enable = true;
#      luaModules = with pkgs.luaPackages; [
#        luarocks # is the package manager for Lua modules
#        luadbi-mysql # Database abstraction layer
#        vicious
#        lgi
#	lua	
#      ];
#    };

#    desktopManager.plasma5 = {
#      enable = true;
#    };
  };
  

  # Configure keymap in X11
  # services.xserver.layout = "us";
  # services.xserver.xkbOptions = "eurosign:e";

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  # Enable sound.
  sound.enable = true;
  hardware.pulseaudio.enable = true;

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;

  users.groups.plugdev = {}; 

  # Android ADB
  programs.adb.enable = true; 

  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.setkeh = {
    isNormalUser = true;
    extraGroups = [ "wheel" "docker" "libvirtd" "dialout" "plugdev" "adbusers" "openrazer" ];

    # Setup wine
    packages = with pkgs; [
      (wineWowPackages.full.override {
        wineRelease = "staging";
        mingwSupport = true;
      })
      winetricks
      samba
      lutris
      gamemode
      libGL
      gst_all_1.gstreamer
      vulkan-tools
      vulkan-loader
      vulkan-headers
      amdvlk 
    ];
  };

  # Set My Usershell
  users.users.setkeh.shell = pkgs.fish;

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
    vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
    emacs
    wget
    firefox
    lua
    compton
    libusb1
    usbutils
    ntfs3g
    dmenu
    slstatus
    feh
    rtl-sdr
    lm_sensors
    clinfo
    msr-tools
    xdg-desktop-portal-gtk
    python39Packages.pyparsing
    cacert
  ];

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # programs.gnupg.agent = {
  #   enable = true;
  #   enableSSHSupport = true;
  # };

  # List services that you want to enable:

  # Flatpack package installler
  #services.flatpak.enable = true;
  #xdg.portal.enable = true;
#  xdg.portal.extraPortals = [ pkgs.xdg-desktop-portal-gtk ];

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;

  # Open Razer
  hardware.openrazer.enable = true;  

  # Docker Daemon
  virtualisation.docker.enable = true;

  # GnuPG Configuration
  programs.gnupg.agent.enable = true;

  # Teamviewer
  services.teamviewer.enable = true;

  # Libvirtd for KVM
  virtualisation.libvirtd.enable = true;
  #virtualisation.spiceUSBRedirection.enable = true;

  # UPS Setup
  #power.ups = {
  #  enable = true;
  #  mode = "standalone";
  #};
  services.apcupsd.enable = true;
  services.apcupsd.configText = ''
UPSNAME UPSMAIN
UPSCABLE ether
UPSTYPE net
DEVICE 10.0.0.10:3551
POLLTIME 10 
NETSERVER on
NISPORT 3551
BATTERYLEVEL 50
MINUTES 5
'';

  # Open ports in the firewall.
  networking.firewall.allowedTCPPorts = [ 5353 8266 ];
  networking.firewall.allowedUDPPorts = [ 5353 8266 ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # UDEV Rules for Hardware that requires them
  services.udev.extraRules = '' 
    # Cairnsmore1
    ATTRS{idVendor}=="067b", ATTRS{idProduct}=="0230", SUBSYSTEM=="usb", ACTION=="add", MODE="0666", GROUP="plugdev"
    # Cairnsmore1-2
    ATTRS{idVendor}=="0403", ATTRS{idProduct}=="8350", SUBSYSTEM=="usb", ACTION=="add", MODE="0666", GROUP="plugdev"
    # Lancelot and Avalon
    ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", SUBSYSTEM=="usb", ACTION=="add", MODE="0666", GROUP="plugdev"
    # Butterfly Labs FPGA and ASIC devices
    ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6014", SUBSYSTEM=="usb", ACTION=="add", MODE="0666", GROUP="plugdev"
  '';

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "21.05"; # Did you read the comment?

}

